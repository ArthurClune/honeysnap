#!/usr/bin/env python2.4
    
################################################################################
# (c) 2007, The Honeynet Project
#   Author: Arthur Clune, arthur@honeynet.org.uk
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
################################################################################    

# $Id$

"""
Bring up a ipython shell with our model already loaded.
"""         

import IPython                  
import optparse  
import sys
from sqlalchemy import *
from sqlalchemy.ext.selectresults import SelectResults
from honeysnap.model import model
from honeysnap.importers.sebekDecode import SBK_READ, SBK_WRITE, SBK_OPEN, SBK_SOCK

class CustomIPShell(IPython.iplib.InteractiveShell):
     def raw_input(self, *args, **kw):
        try:
            return IPython.iplib.InteractiveShell.raw_input(self, *args, **kw)
        except EOFError:
            b = raw_input("Do you wish to commit your "
                          "database changes? [yes] ")
            if not b.startswith("n"):
                session.flush()
            raise EOFError
 
class CustomMatplotlibShell(IPython.Shell.MatplotlibShell):
     def raw_input(self, *args, **kw):
        try:
            return IPython.Shell.MatplotlibShell.raw_input(self, *args, **kw)
        except EOFError:
            b = raw_input("Do you wish to commit your "
                          "database changes? [yes] ")
            if not b.startswith("n"):
                session.flush()
            raise EOFError  

op = optparse.OptionParser()
op.add_option('--dburi', dest='dburi', help='dburi to connect to') 
op.add_option('--debug', dest='debug', action="store_const", const=True, help='Show generated SQL?') 
op.add_option('--pylab', dest='pylab', action="store_const", const=True, help="Run ipython with -pylab for matplotlib")
opts, args = op.parse_args()
if not opts.dburi:
    op.error('Must give a dburi with --dburi=')
    sys.exit(1)  
              
if opts.debug:
	debug=True
else:
	debug=False

engine = model.connect_to_db(opts.dburi, debug)                
session=create_session() 
                         
# trash arguments or ipython will be passed our args and barf
sys.argv = [ sys.argv[0] ]

locals = model.__dict__
locals.update(__name__="hs-admin")
locals.update(session=session) 
locals.update(engine=engine)            

locals.update(SBK_READ=SBK_READ, SBK_WRITE=SBK_WRITE, SBK_OPEN=SBK_OPEN, SBK_SOCK=SBK_SOCK)
if opts.pylab:
    shell = IPython.Shell.IPShell(user_ns=locals, shell_class=CustomMatplotlibShell)
else:
    shell = IPython.Shell.IPShell(user_ns=locals, shell_class=CustomIPShell)
shell.mainloop(banner='\nWelcome to the Honeysnap Shell\n') 

